{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\nimport { d as getAriaLabel, e as renderHiddenInput } from './helpers-1457892a.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\n\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Checkbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-cb-${checkboxIds++}`;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n    this.disabled = false;\n    /**\n     * The value of the checkbox does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a checkbox is analogous to the value of an `<input type=\"checkbox\">`,\n     * it's only used when the checkbox participates in a native `<form>`.\n     */\n    this.value = 'on';\n    this.onClick = (ev) => {\n      ev.preventDefault();\n      this.setFocus();\n      this.checked = !this.checked;\n      this.indeterminate = false;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n    this.emitStyle();\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  setFocus() {\n    if (this.focusEl) {\n      this.focusEl.focus();\n    }\n  }\n  render() {\n    const { color, checked, disabled, el, indeterminate, inputId, name, value } = this;\n    const mode = getIonMode(this);\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\n    renderHiddenInput(true, el, name, (checked ? value : ''), disabled);\n    let path = indeterminate\n      ? h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })\n      : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" });\n    if (mode === 'md') {\n      path = indeterminate\n        ? h(\"path\", { d: \"M2 12H22\", part: \"mark\" })\n        : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" });\n    }\n    return (h(Host, { onClick: this.onClick, \"aria-labelledby\": label ? labelId : null, \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, role: \"checkbox\", class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        'interactive': true\n      }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"checkbox\", \"aria-checked\": `${checked}`, disabled: disabled, id: inputId, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: focusEl => this.focusEl = focusEl })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"checked\": [\"checkedChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nlet checkboxIds = 0;\nCheckbox.style = {\n  ios: checkboxIosCss,\n  md: checkboxMdCss\n};\n\nexport { Checkbox as ion_checkbox };\n"],"sourceRoot":"webpack:///","file":"8-es5.js"}