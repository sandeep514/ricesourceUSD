{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { c as writeTask, r as registerInstance, e as createEvent, f as readTask, h, i as getElement, H as Host } from './index-7a8b7a1c.js';\nimport { a as isPlatform, b as getIonMode, c as config } from './ionic-global-63a97a32.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { c as componentOnReady, k as clamp, g as getElementRoot, r as raf } from './helpers-1457892a.js';\nimport { d as hapticImpact } from './haptic-27b3f981.js';\nimport { c as createAnimation } from './animation-822d986b.js';\nimport { s as sanitizeDOMString } from './index-9e3fe806.js';\nimport { S as SPINNERS } from './spinner-configs-cd7845af.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner, refresherEl) => {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner, refresherEl) : createTranslateAnimation(pullingSpinner, refresherEl);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = (arrowContainer) ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation()\n    .duration(1000)\n    .easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation()\n    .addElement(spinnerArrowContainer)\n    .keyframes([\n    { offset: 0, opacity: '0.3' },\n    { offset: 0.45, opacity: '0.3' },\n    { offset: 0.55, opacity: '1' },\n    { offset: 1, opacity: '1' }\n  ]);\n  const circleInnerAnimation = createAnimation()\n    .addElement(circle)\n    .keyframes([\n    { offset: 0, strokeDasharray: '1px, 200px' },\n    { offset: 0.20, strokeDasharray: '1px, 200px' },\n    { offset: 0.55, strokeDasharray: '100px, 200px' },\n    { offset: 1, strokeDasharray: '100px, 200px' }\n  ]);\n  const circleOuterAnimation = createAnimation()\n    .addElement(spinner)\n    .keyframes([\n    { offset: 0, transform: 'rotate(-90deg)' },\n    { offset: 1, transform: 'rotate(210deg)' }\n  ]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation()\n      .addElement(arrowContainer)\n      .keyframes([\n      { offset: 0, transform: 'rotate(0deg)' },\n      { offset: 0.30, transform: 'rotate(0deg)' },\n      { offset: 0.55, transform: 'rotate(280deg)' },\n      { offset: 1, transform: 'rotate(400deg)' }\n    ]);\n    const arrowAnimation = createAnimation()\n      .addElement(arrow)\n      .keyframes([\n      { offset: 0, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.30, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n      { offset: 1, transform: 'translateX(-1.5px) scale(1)' }\n    ]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `scale(0) translateY(-${height}px)` },\n    { offset: 1, transform: 'scale(1) translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon, refresherEl) => {\n  /**\n   * Do not take the height of the refresher icon\n   * because at this point the DOM has not updated,\n   * so the refresher icon is still hidden with\n   * display: none.\n   * The `ion-refresher` container height\n   * is roughly the amount we need to offset\n   * the icon by when pulling down.\n   */\n  const height = refresherEl.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `translateY(-${height}px)` },\n    { offset: 1, transform: 'translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n  return createAnimation()\n    .duration(125)\n    .addElement(pullingRefresherIcon)\n    .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (spinner, ticks, opacity, currentTickToShow) => {\n  writeTask(() => {\n    setSpinnerOpacity(spinner, opacity);\n    ticks.forEach((el, i) => el.style.setProperty('opacity', (i <= currentTickToShow) ? '0.99' : '0'));\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', (lastVelocityY >= 1.0) ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = (el, value) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, 200);\n  writeTask(() => {\n    el.style.setProperty('transition', '0.2s all ease-out');\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    }\n    else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = async (referenceEl, mode) => {\n  const refresherContent = referenceEl.querySelector('ion-refresher-content');\n  if (!refresherContent) {\n    return Promise.resolve(false);\n  }\n  await new Promise(resolve => componentOnReady(refresherContent, resolve));\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return (pullingSpinner !== null &&\n    refreshingSpinner !== null &&\n    ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n      mode === 'md'));\n};\nconst transitionEndAsync = (el, expectedDuration = 0) => {\n  return new Promise(resolve => {\n    transitionEnd(el, expectedDuration, resolve);\n  });\n};\nconst transitionEnd = (el, expectedDuration = 0, callback) => {\n  let unRegTrans;\n  let animationTimeout;\n  const opts = { passive: true };\n  const ANIMATION_FALLBACK_TIMEOUT = 500;\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = (ev) => {\n    if (ev === undefined || el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n    el.addEventListener('transitionend', onTransitionEnd, opts);\n    animationTimeout = setTimeout(onTransitionEnd, expectedDuration + ANIMATION_FALLBACK_TIMEOUT);\n    unRegTrans = () => {\n      if (animationTimeout) {\n        clearTimeout(animationTimeout);\n        animationTimeout = undefined;\n      }\n      el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n      el.removeEventListener('transitionend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid var(--ion-color-step-200, #ececec);background:var(--ion-color-step-250, #ffffff);-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    this.state = 1 /* Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  async checkNativeRefresher() {\n    const useNativeRefresher = await shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    }\n    else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined);\n    }\n    else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach(ani => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    let MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          writeTask(() => setSpinnerOpacity(pullingSpinner, 0));\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        // delay showing the next tick marks until user has pulled 30px\n        const opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n        const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n        const currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n        const shouldShowRefreshingSpinner = this.state === 8 /* Refreshing */ || currentTickToShow === NUM_TICKS - 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({ style: 'light' });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        }\n        else {\n          this.state = 2 /* Pulling */;\n          handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index-34cb2743.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n        /**\n         * If the content had `display: none` when\n         * the refresher was initialized, its clientHeight\n         * will be 0. When the gesture starts, the content\n         * will be visible, so try to get the correct\n         * client height again. This is most common when\n         * using the refresher in an ion-menu.\n         */\n        if (MAX_PULL === 0) {\n          MAX_PULL = this.scrollEl.clientHeight * 0.16;\n        }\n      },\n      onMove: ev => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */);\n          this.needsCompletion = false;\n        }\n        else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index-34cb2743.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 31,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* Refreshing */ && this.state !== 32 /* Completing */ && this.scrollEl.scrollTop === 0,\n      onStart: (ev) => {\n        ev.data = { animation: undefined, didStart: false, cancelled: false };\n      },\n      onMove: (ev) => {\n        if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* Pulling */;\n          writeTask(() => this.scrollEl.style.setProperty('--overflow', 'hidden'));\n          const animationType = getRefresherAnimationType(contentEl);\n          const animation = createPullingAnimation(animationType, pullingRefresherIcon, this.el);\n          ev.data.animation = animation;\n          animation.progressStart(false, 0);\n          this.ionStart.emit();\n          this.animations.push(animation);\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: (ev) => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n        if (this.progress <= 0.4) {\n          this.gesture.enable(false);\n          ev.data.animation\n            .progressEnd(0, this.progress, 500)\n            .onFinish(() => {\n            this.animations.forEach(ani => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* Inactive */;\n          });\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${(progress * 100)}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n        });\n      }\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    /**\n     * If using non-native refresher before make sure\n     * we clean up any old CSS. This can happen when\n     * a user manually calls the refresh method in a\n     * component create callback before the native\n     * refresher is setup.\n     */\n    this.setCss(0, '', false, '');\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    }\n    else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = this.el.closest('ion-content');\n    if (!contentEl) {\n      console.error('<ion-refresher> must be used inside an <ion-content>');\n      return;\n    }\n    await new Promise(resolve => componentOnReady(contentEl, resolve));\n    this.scrollEl = await contentEl.getScrollElement();\n    this.backgroundContentEl = getElementRoot(contentEl).querySelector('#background-content');\n    if (await shouldUseNativeRefresher(this.el, getIonMode(this))) {\n      this.setupNativeRefresher(contentEl);\n    }\n    else {\n      this.gesture = (await import('./index-34cb2743.js')).createGesture({\n        el: contentEl,\n        gestureName: 'refresher',\n        gesturePriority: 31,\n        direction: 'y',\n        threshold: 20,\n        passive: false,\n        canStart: () => this.canStart(),\n        onStart: () => this.onStart(),\n        onMove: ev => this.onMove(ev),\n        onEnd: () => this.onEnd(),\n      });\n      this.disabledChanged();\n    }\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */)));\n      }\n    }\n    else {\n      this.close(32 /* Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* Cancelling */)));\n      }\n    }\n    else {\n      this.close(16 /* Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* _BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = (Number.isNaN(this.pullFactor) || this.pullFactor < 0) ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    }\n    else if (this.state === 2 /* Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this)\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600);\n    // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n    // TODO: stop gesture\n  }\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = (y > 0);\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = ((y > 0) ? `translateY(${y}px) translateZ(0px)` : '');\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = (overflowVisible ? 'hidden' : '');\n      }\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { slot: \"fixed\", class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* Inactive */,\n        'refresher-pulling': this.state === 2 /* Pulling */,\n        'refresher-ready': this.state === 4 /* Ready */,\n        'refresher-refreshing': this.state === 8 /* Refreshing */,\n        'refresher-cancelling': this.state === 16 /* Cancelling */,\n        'refresher-completing': this.state === 32 /* Completing */,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nRefresher.style = {\n  ios: refresherIosCss,\n  md: refresherMdCss\n};\n\nconst RefresherContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillLoad() {\n    if (this.pullingIcon === undefined) {\n      const mode = getIonMode(this);\n      const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n      this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n    }\n    if (this.refreshingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n    }\n  }\n  render() {\n    const pullingIcon = this.pullingIcon;\n    const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n    const mode = getIonMode(this);\n    return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner &&\n      h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' &&\n        h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { name: \"caret-back-sharp\" })))), this.pullingIcon && !hasSpinner &&\n      h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false })), this.pullingText &&\n      h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(this.pullingText) })), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner &&\n      h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner })), this.refreshingText &&\n      h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(this.refreshingText) }))));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n"],"sourceRoot":"webpack:///","file":"26-es5.js"}